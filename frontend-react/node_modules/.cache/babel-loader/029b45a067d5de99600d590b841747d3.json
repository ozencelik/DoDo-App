{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ozenc\\\\Desktop\\\\dodo\\\\frontend-react\\\\src\\\\Home.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport AppNavbar from './AppBar';\nimport { Link } from 'react-router-dom';\nimport { Button, Container } from 'reactstrap';\nimport { withCookies } from 'react-cookie';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      isAuthenticated: false,\n      user: undefined\n    };\n    const cookies = props.cookies;\n    this.state.csrfToken = cookies.get('XSRF-TOKEN');\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n  }\n\n  async componentDidMount() {\n    const response = await fetch('/api/user', {\n      credentials: 'include'\n    });\n    const body = await response.text();\n\n    if (body === '') {\n      this.setState({\n        isAuthenticated: false\n      });\n    } else {\n      this.setState({\n        isAuthenticated: true,\n        user: JSON.parse(JSON.stringify(body))\n      });\n    }\n  }\n\n  login() {\n    let port = window.location.port ? ':' + window.location.port : '';\n\n    if (port === ':3000') {\n      port = ':8080';\n    }\n\n    window.location.href = '//' + window.location.hostname + port + '/private';\n  }\n\n  logout() {\n    fetch('/api/logout', {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        'X-XSRF-TOKEN': this.state.csrfToken\n      }\n    }).then(res => res.json()).then(response => {\n      window.location.href = response.logoutUrl + \"?id_token_hint=\" + response.idToken + \"&post_logout_redirect_uri=\" + window.location.origin;\n    });\n  }\n\n  render() {\n    const message = this.state.user ? React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Welcome, \", this.state.user.name, \"!\") : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Please log in to manage your JUG Tour.\");\n    const button = this.state.isAuthenticated ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"default\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/lists\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Manage Your ToDo Lists\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(Button, {\n      color: \"danger link \",\n      onClick: this.logout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Logout\")) : React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Login\");\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(AppNavbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(Container, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, message, button));\n  }\n\n}\n\nexport default withCookies(Home);","map":{"version":3,"sources":["C:\\Users\\ozenc\\Desktop\\dodo\\frontend-react\\src\\Home.js"],"names":["React","Component","AppNavbar","Link","Button","Container","withCookies","Home","constructor","props","state","isLoading","isAuthenticated","user","undefined","cookies","csrfToken","get","login","bind","logout","componentDidMount","response","fetch","credentials","body","text","setState","JSON","parse","stringify","port","window","location","href","hostname","method","headers","then","res","json","logoutUrl","idToken","origin","render","message","name","button"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\nimport AppNavbar from './AppBar';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Container } from 'reactstrap';\r\nimport { withCookies } from 'react-cookie';\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    isLoading: true,\r\n    isAuthenticated: false,\r\n    user: undefined\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    const {cookies} = props;\r\n    this.state.csrfToken = cookies.get('XSRF-TOKEN');\r\n    this.login = this.login.bind(this);\r\n    this.logout = this.logout.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const response = await fetch('/api/user', {credentials: 'include'});\r\n    const body = await response.text();\r\n    if (body === '') {\r\n      this.setState(({isAuthenticated: false}))\r\n    } else {\r\n      this.setState({isAuthenticated: true, user: JSON.parse(JSON.stringify(body))})\r\n    }\r\n  }\r\n\r\n  login() {\r\n    let port = (window.location.port ? ':' + window.location.port : '');\r\n    if (port === ':3000') {\r\n      port = ':8080';\r\n    }\r\n    window.location.href = '//' + window.location.hostname + port + '/private';\r\n  }\r\n\r\n  logout() {\r\n    fetch('/api/logout', {method: 'POST', credentials: 'include',\r\n      headers: {'X-XSRF-TOKEN': this.state.csrfToken}}).then(res => res.json())\r\n      .then(response => {\r\n        window.location.href = response.logoutUrl + \"?id_token_hint=\" +\r\n          response.idToken + \"&post_logout_redirect_uri=\" + window.location.origin;\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const message = this.state.user ?\r\n      <h2>Welcome, {this.state.user.name}!</h2> :\r\n      <p>Please log in to manage your JUG Tour.</p>;\r\n\r\n    const button = this.state.isAuthenticated ?\r\n      <div>\r\n        <Button color=\"default\"><Link to=\"/lists\">Manage Your ToDo Lists</Link></Button>\r\n        <br/>\r\n        <Button color=\"danger link \" onClick={this.logout}>Logout</Button>\r\n      </div> :\r\n      <Button color=\"primary\" onClick={this.login}>Login</Button>;\r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          {message}\r\n          {button}\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withCookies(Home);"]},"metadata":{},"sourceType":"module"}