{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\ozenc\\\\Desktop\\\\dodo\\\\frontend-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\ozenc\\\\Desktop\\\\dodo\\\\frontend-react\\\\src\\\\ListGroup.js\";\nimport React, { Component } from 'react';\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\nimport AppNavbar from './AppNavBa';\nimport { Link } from 'react-router-dom';\n\nclass ListGroup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lists: [],\n      isLoading: true,\n      activeId: -1\n    };\n    this.remove = this.remove.bind(this);\n    this.setActiveId = this.setActiveId.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      isLoading: true\n    });\n    fetch('api/lists').then(response => response.json()).then(data => this.setState({\n      lists: data,\n      isLoading: false\n    }));\n  }\n\n  async remove(id) {\n    await fetch(\"/api/list/\".concat(id), {\n      method: 'DELETE',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(() => {\n      let updatedLists = [...this.state.lists].filter(i => i.id !== id);\n      this.setState({\n        lists: updatedLists\n      });\n    });\n  }\n\n  async setActiveId(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    let id = _objectSpread({}, this.state.activeId);\n\n    id = value;\n    this.state.activeId = id;\n    const _this$state = this.state,\n          lists = _this$state.lists,\n          isLoading = _this$state.isLoading,\n          activeId = _this$state.activeId;\n    console.log(this.state.activeId);\n    window.location.reload();\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          lists = _this$state2.lists,\n          isLoading = _this$state2.isLoading,\n          activeId = _this$state2.activeId;\n\n    if (isLoading) {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n\n    const listGroup = lists.map(list => {\n      return React.createElement(\"div\", {\n        key: list.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"success\",\n        value: list.id || '',\n        onClick: this.setActiveId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, list.name, \", \", list.id), \"\\xA0\");\n    });\n    const items = lists.map(list => {\n      if (list.id == this.state.activeId) {\n        return list.items.map(item => {\n          return React.createElement(\"tr\", {\n            key: item.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            style: {\n              whiteSpace: 'nowrap'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            },\n            __self: this\n          }, item.id), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72\n            },\n            __self: this\n          }, item.name), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73\n            },\n            __self: this\n          }, item.dependencies.map(ite => {\n            return React.createElement(Button, {\n              key: ite.id,\n              type: \"button\",\n              disabled: true,\n              size: \"sm\",\n              color: \"info\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 74\n              },\n              __self: this\n            }, ite.name);\n          })), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          }, React.createElement(Button, {\n            size: \"sm\",\n            color: \"primary\",\n            tag: Link,\n            to: \"/lists/\" + list.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77\n            },\n            __self: this\n          }, \"Show  \"), \"\\xA0\", React.createElement(Button, {\n            size: \"sm\",\n            color: \"danger\",\n            onClick: () => this.remove(list.id),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          }, \"Delete\")));\n        });\n      }\n    });\n    return React.createElement(\"div\", {\n      id: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(AppNavbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(Container, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"float-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"success\",\n      tag: Link,\n      to: \"/lists/new\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Add New Lists\")), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"My Todo Lists\"), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, listGroup), React.createElement(Table, {\n      className: \"mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      width: \"20%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Id\"), React.createElement(\"th\", {\n      width: \"20%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      width: \"20%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Items\"), React.createElement(\"th\", {\n      width: \"20%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Actions\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, items))));\n  }\n\n}\n\nexport default ListGroup;","map":{"version":3,"sources":["C:\\Users\\ozenc\\Desktop\\dodo\\frontend-react\\src\\ListGroup.js"],"names":["React","Component","Button","ButtonGroup","Container","Table","AppNavbar","Link","ListGroup","constructor","props","state","lists","isLoading","activeId","remove","bind","setActiveId","componentDidMount","setState","fetch","then","response","json","data","id","method","headers","updatedLists","filter","i","event","target","value","name","console","log","window","location","reload","render","listGroup","map","list","items","item","whiteSpace","dependencies","ite"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavBa';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass ListGroup extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {lists: [], isLoading: true, activeId: -1};\r\n    this.remove = this.remove.bind(this);\r\n\r\n    this.setActiveId = this.setActiveId.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    fetch('api/lists')\r\n      .then(response => response.json())\r\n      .then(data => this.setState({lists: data, isLoading: false}));\r\n  }\r\n\r\n  async remove(id) {\r\n    await fetch(`/api/list/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      let updatedLists = [...this.state.lists].filter(i => i.id !== id);\r\n      this.setState({lists: updatedLists});\r\n    });\r\n  }\r\n\r\n  async setActiveId(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let id = {...this.state.activeId};\r\n    id = value;\r\n    this.state.activeId = id;\r\n\r\n    const {lists, isLoading, activeId} = this.state;\r\n\r\n    console.log(this.state.activeId);\r\n\r\n    window.location.reload();\r\n\r\n  }\r\n\r\n  render() {\r\n    const {lists, isLoading, activeId} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const listGroup = lists.map(list => {\r\n        return <div key={list.id}>\r\n          <Button color=\"success\" value={list.id || ''}\r\n                     onClick={this.setActiveId}>{list.name}, {list.id}</Button>\r\n          &nbsp;\r\n        </div>\r\n    });\r\n    const items = lists.map(list => {\r\n        if(list.id == this.state.activeId){\r\n          return list.items.map(item => {\r\n              return <tr key={item.id}>\r\n              <td style={{whiteSpace: 'nowrap'}}>{item.id}</td>\r\n              <td>{item.name}</td>\r\n              <td>{item.dependencies.map(ite => {\r\n                return <Button key={ite.id} type=\"button\" disabled size=\"sm\" color=\"info\">{ite.name}</Button>\r\n              })}</td>\r\n              <td>\r\n                <Button size=\"sm\" color=\"primary\" tag={Link} to={\"/lists/\" + list.id}>Show  </Button>\r\n                &nbsp;\r\n                <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(list.id)}>Delete</Button>\r\n              </td>\r\n            </tr>\r\n          });\r\n  \r\n        }\r\n      });\r\n  \r\n\r\n      return (\r\n        <div id=\"content\">\r\n          <AppNavbar/>\r\n          <Container fluid>\r\n  \r\n            <div className=\"float-right\">\r\n              <Button color=\"success\" tag={Link} to=\"/lists/new\">Add New Lists</Button>\r\n            </div>\r\n            <h2>My Todo Lists</h2>\r\n  \r\n            <div className=\"row\">\r\n                {listGroup}\r\n            </div>\r\n  \r\n            \r\n            <Table className=\"mt-4\">\r\n              <thead>\r\n              <tr>\r\n                <th width=\"20%\">Id</th>\r\n                <th width=\"20%\">Name</th>\r\n                <th width=\"20%\">Items</th>\r\n                <th width=\"20%\">Actions</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n                {items}\r\n              </tbody>\r\n            </Table>\r\n  \r\n          </Container>\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default ListGroup;"]},"metadata":{},"sourceType":"module"}