{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\ozenc\\\\Desktop\\\\dodo\\\\frontend-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\ozenc\\\\Desktop\\\\dodo\\\\frontend-react\\\\src\\\\ListGroup.js\";\nimport React, { Component } from 'react';\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\nimport AppNavbar from './AppBar';\nimport { Link } from 'react-router-dom';\nimport { instanceOf } from 'prop-types';\nimport { withCookies, Cookies } from 'react-cookie';\nimport { withRouter } from 'react-router';\n\nclass ListGroup extends Component {\n  constructor(props) {\n    super(props);\n    const cookies = props.cookies;\n    this.state = {\n      lists: [],\n      csrfToken: cookies.get('XSRF-TOKEN'),\n      isLoading: true\n    };\n    this.remove = this.remove.bind(this);\n    this.setActiveId = this.setActiveId.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      isLoading: true\n    });\n    fetch('api/lists').then(response => response.json()).then(data => this.setState({\n      lists: data,\n      isLoading: false\n    })).catch(() => this.props.history.push('/'));\n  }\n\n  async remove(id) {\n    await fetch(\"/api/list/\".concat(id), {\n      method: 'DELETE',\n      headers: {\n        'X-XSRF-TOKEN': this.state.csrfToken,\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include'\n    }).then(() => {\n      let updatedLists = [...this.state.lists].filter(i => i.id !== id);\n      this.setState({\n        lists: updatedLists\n      });\n    });\n    this.props.history.push('/lists'); //Render the page without reload.\n  }\n\n  async removeItem(itemId, listId) {\n    await fetch(\"/api/list/\".concat(listId, \"/item/\").concat(itemId), {\n      method: 'DELETE',\n      headers: {\n        'X-XSRF-TOKEN': this.state.csrfToken,\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include'\n    }).then(() => {\n      let updatedLists = [...this.state.lists.items].filter(i => i.id !== id);\n      this.setState({\n        lists: updatedLists\n      });\n    });\n    this.props.history.push('/lists'); //Render the page without reload.\n  }\n\n  async setActiveId(event) {\n    const target = event.target;\n    const value = target.value;\n\n    let id = _objectSpread({}, this.state.activeId);\n\n    id = value;\n    this.state.activeId = id;\n    const _id = id,\n          activeId = _id.activeId;\n    window.location.reload();\n  }\n\n  render() {\n    const _this$state = this.state,\n          lists = _this$state.lists,\n          isLoading = _this$state.isLoading,\n          activeId = _this$state.activeId;\n\n    if (isLoading) {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n\n    const getListTitle = lists.map(list => {\n      if (list.id == this.state.activeId) {\n        return React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, list.name);\n      }\n    });\n    const listGroup = lists.map(list => {\n      return React.createElement(\"div\", {\n        key: list.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        value: list.id || '',\n        onClick: this.setActiveId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, list.name), \"\\xA0\");\n    });\n    const items = lists.map(list => {\n      if (list.id == this.state.activeId) {\n        return list.items.map(item => {\n          return React.createElement(\"tr\", {\n            key: item.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            style: {\n              whiteSpace: 'nowrap'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105\n            },\n            __self: this\n          }, item.name), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106\n            },\n            __self: this\n          }, item.description), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107\n            },\n            __self: this\n          }, item.dependencies.map(ite => {\n            return React.createElement(Button, {\n              key: ite.id,\n              type: \"button\",\n              disabled: true,\n              size: \"sm\",\n              color: \"info\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 108\n              },\n              __self: this\n            }, ite.name);\n          })), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110\n            },\n            __self: this\n          }, React.createElement(Button, {\n            size: \"sm\",\n            color: \"success\",\n            tag: Link,\n            to: \"/lists/\" + list.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 111\n            },\n            __self: this\n          }, \"Complete\"), \"\\xA0\", React.createElement(Button, {\n            size: \"sm\",\n            color: \"danger\",\n            onClick: () => this.remove(list.id),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113\n            },\n            __self: this\n          }, \"Delete\")));\n        });\n      }\n    });\n    return React.createElement(\"div\", {\n      id: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(AppNavbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(Container, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"float-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(Button, {\n      tag: Link,\n      to: \"/lists/new\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Add New Lists\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), \"\\xA0\", React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"info\",\n      tag: Link,\n      to: \"/lists/\" + this.state.activeId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Edit\"), \"\\xA0\", React.createElement(Button, {\n      color: \"danger\",\n      onClick: () => this.remove(this.state.activeId),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Delete\"))), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, getListTitle), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, listGroup), React.createElement(Table, {\n      className: \"mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      width: \"20%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      width: \"20%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Descripton\"), React.createElement(\"th\", {\n      width: \"20%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"Dependency Items\"), React.createElement(\"th\", {\n      width: \"20%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"Actions\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, items))));\n  }\n\n}\n\nListGroup.propTypes = {\n  cookies: instanceOf(Cookies).isRequired\n};\nexport default withCookies(ListGroup);","map":{"version":3,"sources":["C:\\Users\\ozenc\\Desktop\\dodo\\frontend-react\\src\\ListGroup.js"],"names":["React","Component","Button","ButtonGroup","Container","Table","AppNavbar","Link","instanceOf","withCookies","Cookies","withRouter","ListGroup","constructor","props","cookies","state","lists","csrfToken","get","isLoading","remove","bind","setActiveId","componentDidMount","setState","fetch","then","response","json","data","catch","history","push","id","method","headers","credentials","updatedLists","filter","i","removeItem","itemId","listId","items","event","target","value","activeId","window","location","reload","render","getListTitle","map","list","name","listGroup","item","whiteSpace","description","dependencies","ite","propTypes","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppBar';\r\nimport { Link } from 'react-router-dom';\r\nimport { instanceOf } from 'prop-types';\r\nimport { withCookies, Cookies } from 'react-cookie';\r\nimport { withRouter } from 'react-router'\r\n\r\nclass ListGroup extends Component {\r\n\r\n  static propTypes = {\r\n    cookies: instanceOf(Cookies).isRequired\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    const {cookies} = props;\r\n    this.state = {lists: [], csrfToken: cookies.get('XSRF-TOKEN'), isLoading: true};\r\n    this.remove = this.remove.bind(this);\r\n\r\n    this.setActiveId = this.setActiveId.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    fetch('api/lists')\r\n      .then(response => response.json())\r\n      .then(data => this.setState({lists: data, isLoading: false}))\r\n      .catch(() => this.props.history.push('/'));\r\n  }\r\n\r\n  async remove(id) {\r\n    await fetch(`/api/list/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'X-XSRF-TOKEN': this.state.csrfToken,\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      credentials: 'include'\r\n    }).then(() => {\r\n      let updatedLists = [...this.state.lists].filter(i => i.id !== id);\r\n      this.setState({lists: updatedLists});\r\n    });\r\n\r\n    this.props.history.push('/lists'); //Render the page without reload.\r\n  }\r\n\r\n  async removeItem(itemId, listId) {\r\n    await fetch(`/api/list/${listId}/item/${itemId}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'X-XSRF-TOKEN': this.state.csrfToken,\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      credentials: 'include'\r\n    }).then(() => {\r\n      let updatedLists = [...this.state.lists.items].filter(i => i.id !== id);\r\n      this.setState({lists: updatedLists});\r\n    });\r\n\r\n    this.props.history.push('/lists'); //Render the page without reload.\r\n  }\r\n\r\n  async setActiveId(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    let id = {...this.state.activeId};\r\n    id = value;\r\n    this.state.activeId = id;\r\n\r\n    const {activeId} = id;\r\n\r\n    window.location.reload();\r\n  }\r\n\r\n  render() {\r\n    const {lists, isLoading, activeId} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const getListTitle = lists.map(list => {\r\n      if(list.id == this.state.activeId){\r\n        return <h2>{list.name}</h2>\r\n      }\r\n    });\r\n\r\n    const listGroup = lists.map(list => {\r\n        return <div key={list.id}>\r\n          <Button color=\"primary\" value={list.id || ''}\r\n                     onClick={this.setActiveId}>{list.name}</Button>\r\n          &nbsp;\r\n        </div>\r\n    });\r\n\r\n    \r\n    const items = lists.map(list => {\r\n        if(list.id == this.state.activeId){\r\n          return list.items.map(item => {\r\n              return <tr key={item.id}>\r\n              <td style={{whiteSpace: 'nowrap'}}>{item.name}</td>\r\n              <td>{item.description}</td>\r\n              <td>{item.dependencies.map(ite => {\r\n                return <Button key={ite.id} type=\"button\" disabled size=\"sm\" color=\"info\">{ite.name}</Button>\r\n              })}</td>\r\n              <td>\r\n                <Button size=\"sm\" color=\"success\" tag={Link} to={\"/lists/\" + list.id}>Complete</Button>\r\n                &nbsp;\r\n                <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(list.id)}>Delete</Button>\r\n              </td>\r\n            </tr>\r\n          });\r\n        }\r\n      });\r\n  \r\n\r\n      return (\r\n        <div id=\"content\">\r\n          <AppNavbar/>\r\n          <Container fluid>\r\n  \r\n            <div className=\"float-right\">\r\n              <Button tag={Link} to=\"/lists/new\">Add New Lists</Button>\r\n              <br></br>&nbsp;\r\n              <div className=\"column\">\r\n                <Button color=\"info\" tag={Link} to={\"/lists/\" + this.state.activeId}>Edit</Button>\r\n                &nbsp;\r\n                <Button color=\"danger\" onClick={() => this.remove(this.state.activeId)}>Delete</Button>\r\n              </div>\r\n            </div>\r\n            <h2>{getListTitle}</h2>\r\n  \r\n            <div className=\"row\">\r\n                {listGroup}\r\n            </div>\r\n  \r\n            \r\n            <Table className=\"mt-4\">\r\n              <thead>\r\n              <tr>\r\n                <th width=\"20%\">Name</th>\r\n                <th width=\"20%\">Descripton</th>\r\n                <th width=\"20%\">Dependency Items</th>\r\n                <th width=\"20%\">Actions</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n                {items}\r\n              </tbody>\r\n            </Table>\r\n  \r\n          </Container>\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default withCookies(ListGroup);"]},"metadata":{},"sourceType":"module"}