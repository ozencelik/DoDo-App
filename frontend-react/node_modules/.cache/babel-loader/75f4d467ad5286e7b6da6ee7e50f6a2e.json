{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\ozenc\\\\Desktop\\\\dodo\\\\frontend-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\ozenc\\\\Desktop\\\\dodo\\\\frontend-react\\\\src\\\\ListEdit.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\nimport AppNavbar from './AppBar';\nimport { instanceOf } from 'prop-types';\nimport { Cookies, withCookies } from 'react-cookie';\n\nclass ListEdit extends Component {\n  constructor(props) {\n    super(props);\n    this.emptyItem = {\n      name: '',\n      user: null,\n      items: [{\n        deadline: '',\n        name: '',\n        description: '',\n        dependencies: []\n      }]\n    };\n    const cookies = props.cookies;\n    this.state = {\n      item: this.emptyItem,\n      csrfToken: cookies.get('XSRF-TOKEN')\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  async componentDidMount() {\n    if (this.props.match.params.id !== 'new') {\n      try {\n        const list = await (await fetch(\"/api/list/\".concat(this.props.match.params.id), {\n          credentials: 'include'\n        })).json();\n        this.setState({\n          item: list\n        });\n      } catch (error) {\n        this.props.history.push('/');\n      }\n    }\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    let item = _objectSpread({}, this.state.item);\n\n    console.log(item);\n    console.log(item[name]);\n    console.log(value);\n\n    if (name === 'name') {\n      item[name] = value;\n    } else if (name === 'itemname') {\n      item[\"items\"][0].name = value;\n    } else if (name === 'description') {\n      item[\"items\"][0].description = value;\n    } else if (name === 'deadline') {\n      item[\"items\"][0].deadline = value;\n    }\n\n    this.setState({\n      item\n    });\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    const _this$state = this.state,\n          item = _this$state.item,\n          csrfToken = _this$state.csrfToken;\n    await fetch('/api/list', {\n      method: item.id ? 'PUT' : 'POST',\n      headers: {\n        'X-XSRF-TOKEN': this.state.csrfToken,\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(item),\n      credentials: 'include'\n    });\n    this.props.history.push('/lists');\n  }\n\n  render() {\n    const item = this.state.item;\n    const title = React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, item.id ? 'Edit List' : 'Add List');\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(AppNavbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, title, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Name\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"name\",\n      id: \"name\",\n      value: item.name || '',\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    })), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Add Item to List\"), React.createElement(\"div\", {\n      className: \"group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      className: \"col-md-4 mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"itemname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Item Name\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"itemname\",\n      id: \"itemname\",\n      value: item.items[0].name || '',\n      onChange: this.handleChange,\n      autoComplete: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      className: \"col-md-5 mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Description\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"description\",\n      id: \"description\",\n      value: item.items[0].description || '',\n      onChange: this.handleChange,\n      autoComplete: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"deadline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Deadline\"), React.createElement(Input, {\n      type: \"date\",\n      name: \"deadline\",\n      id: \"deadline\",\n      min: \"2019-08-08\",\n      onChange: this.handleChange,\n      value: item.items[0].deadline || '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }))), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Save\"), ' ', React.createElement(Button, {\n      color: \"secondary\",\n      tag: Link,\n      to: \"/lists\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Cancel\")))));\n  }\n\n}\n\nListEdit.propTypes = {\n  cookies: instanceOf(Cookies).isRequired\n};\nexport default withCookies(withRouter(ListEdit));","map":{"version":3,"sources":["C:\\Users\\ozenc\\Desktop\\dodo\\frontend-react\\src\\ListEdit.js"],"names":["React","Component","Link","withRouter","Button","Container","Form","FormGroup","Input","Label","AppNavbar","instanceOf","Cookies","withCookies","ListEdit","constructor","props","emptyItem","name","user","items","deadline","description","dependencies","cookies","state","item","csrfToken","get","handleChange","bind","handleSubmit","componentDidMount","match","params","id","list","fetch","credentials","json","setState","error","history","push","event","target","value","console","log","preventDefault","method","headers","body","JSON","stringify","render","title","propTypes","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport AppNavbar from './AppBar';\r\nimport { instanceOf } from 'prop-types';\r\nimport { Cookies, withCookies } from 'react-cookie';\r\n\r\nclass ListEdit extends Component {\r\n\r\n  static propTypes = {\r\n    cookies: instanceOf(Cookies).isRequired\r\n  };\r\n\r\n  emptyItem = {\r\n    name: '',\r\n    user: null,\r\n    items: [\r\n      {\r\n          deadline: '',\r\n          name: '',\r\n          description: '',\r\n          dependencies: []\r\n      }\r\n    ]\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    const {cookies} = props;\r\n    this.state = {\r\n      item: this.emptyItem,\r\n      csrfToken: cookies.get('XSRF-TOKEN')\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n      try {\r\n        const list = await (await fetch(`/api/list/${this.props.match.params.id}`, {credentials: 'include'})).json();\r\n        this.setState({item: list});\r\n    } catch (error) {\r\n        this.props.history.push('/');\r\n      }\r\n    }\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = {...this.state.item};\r\n\r\n    console.log(item);\r\n    console.log(item[name]);\r\n    console.log(value);\r\n\r\n    if(name === 'name'){\r\n      item[name] = value;\r\n    }else if(name === 'itemname'){\r\n      item[\"items\"][0].name = value;\r\n    }else if(name === 'description'){\r\n      item[\"items\"][0].description = value;\r\n    }else if(name === 'deadline'){\r\n      item[\"items\"][0].deadline = value;\r\n    }\r\n    \r\n    this.setState({item});\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item, csrfToken} = this.state;\r\n\r\n    await fetch('/api/list', {\r\n      method: (item.id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'X-XSRF-TOKEN': this.state.csrfToken,\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n      credentials: 'include'\r\n    });\r\n    this.props.history.push('/lists');\r\n  }\r\n\r\n  render() {\r\n    const {item} = this.state;\r\n    const title = <h2>{item.id ? 'Edit List' : 'Add List'}</h2>;\r\n    \r\n    \r\n    return <div>\r\n      <AppNavbar/>\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormGroup>\r\n          <Label for=\"name\">Name</Label>\r\n            <Input type=\"text\" name=\"name\" id=\"name\" value={item.name || ''}\r\n                   onChange={this.handleChange}/>\r\n          </FormGroup>\r\n          <h2>Add Item to List</h2>\r\n          <div className=\"group row\">\r\n            <FormGroup className=\"col-md-4 mb-3\">\r\n              <Label for=\"itemname\">Item Name</Label>\r\n              <Input type=\"text\" name=\"itemname\" id=\"itemname\" value={item.items[0].name || ''}\r\n                     onChange={this.handleChange} autoComplete=\"name\"/>\r\n            </FormGroup>\r\n            <FormGroup className=\"col-md-5 mb-3\">\r\n              <Label for=\"description\">Description</Label>\r\n              <Input type=\"text\" name=\"description\" id=\"description\" value={item.items[0].description || ''}\r\n                     onChange={this.handleChange} autoComplete=\"description\"/>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"deadline\">Deadline</Label>\r\n              <Input type=\"date\" name=\"deadline\" id=\"deadline\" min=\"2019-08-08\" onChange={this.handleChange} value={item.items[0].deadline || ''}/>\r\n            </FormGroup>\r\n          </div>\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\">Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to=\"/lists\">Cancel</Button>\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n\r\n  }\r\n}\r\n\r\nexport default withCookies(withRouter(ListEdit));"]},"metadata":{},"sourceType":"module"}